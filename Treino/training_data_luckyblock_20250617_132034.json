[
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Criar um programa que organiza caixas no mapa com venda de itens e recompensas equipamentos.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Criar um sistema que gerencia caixas no mundo com coleta de moedas e recompensas armas.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Gerar só as configurações para controla apostas com armas aleatórias.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Quero um código simples que controla caixas sem loop de atualização.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Criar somente a parte que define como caixas são controla com aposta de armas.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Fazer um script para controla caixas com recompensas armas no mundo.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Gerar um programa que gerencia caixas com aposta de armas no mundo para jogadores.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Criar somente a parte que define como lucky blocks são administra com venda de itens.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Fazer um sistema de caixas que controla com aposta de armas.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Fazer apenas a função que controla um lucky blocks no jogo para players.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Quero um código que gerencia apostas no mundo com objetivo coleta de moedas.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Criar um sistema que controla itens no jogo com recompensas equipamentos para jogadores.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Quero um código que organiza lucky blocks no mapa com objetivo aposta de armas.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Fazer um sistema de itens que gerencia com coleta de moedas.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Quero um código que controla itens com venda de itens para personagens em mapa.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Fazer um script para Roblox que organiza lucky blocks com aposta de armas em mapa.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Quero um sistema que organiza apostas com venda de itens para personagens em mapa.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Quero um script que gerencia itens com venda de itens para players em mapa.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Criar somente a parte que define como lucky blocks são organiza com venda de itens.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Criar somente a parte que define como itens são gerencia com coleta de moedas.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Fazer apenas a função que administra um caixas no jogo para players.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Gerar um sistema em Lua que organiza lucky blocks com coleta de moedas no mundo.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Fazer um sistema de lucky blocks que administra com venda de itens.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Quero um código simples que organiza apostas sem loop de atualização.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Fazer apenas a função que controla um itens no mapa para players.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Criar um script que controla apostas no jogo com coleta de moedas e recompensas equipamentos.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Gerar só as configurações para administra lucky blocks com venda de itens.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Fazer um programa para Roblox que organiza caixas com aposta de armas em mapa.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Quero um código que administra lucky blocks com venda de itens para jogadores em mapa.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Criar um programa que administra itens no mundo com coleta de moedas e recompensas itens.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Fazer um programa para administra lucky blocks com recompensas moedas no jogo.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Gerar um sistema em Lua que administra apostas com coleta de moedas no mapa.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Quero um código que gerencia itens no jogo com objetivo aposta de armas.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Fazer um sistema para gerencia caixas com recompensas armas no jogo.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Quero um código simples que administra itens sem loop de atualização.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Quero um código que controla itens com aposta de armas para personagens em mapa.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Gerar um script em Lua que administra itens com aposta de armas no mapa.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Quero um programa que organiza apostas com coleta de moedas para players em mundo.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Fazer apenas a função que administra um itens no mundo para jogadores.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Quero um código que organiza itens no mundo com objetivo aposta de armas.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Quero apenas a função que administra um itens com venda de itens para um jogadores.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Criar somente a parte que define como itens são organiza com armas aleatórias.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Quero um código que organiza apostas no jogo com objetivo coleta de moedas.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Gerar só as configurações para organiza itens com armas aleatórias.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Fazer apenas a função que controla um lucky blocks no jogo para jogadores.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Fazer apenas a função que gerencia um lucky blocks no mundo para jogadores.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Gerar só as configurações para organiza apostas com armas aleatórias.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Gerar um script em Lua que controla apostas com coleta de moedas no mapa.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Criar somente a parte que define como caixas são organiza com venda de itens.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Gerar um sistema que administra itens com coleta de moedas no jogo para personagens.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Gerar um script em Lua que gerencia apostas com armas aleatórias no mapa.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Criar somente a parte que define como lucky blocks são administra com armas aleatórias.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Quero um sistema que gerencia caixas com armas aleatórias para personagens em mundo.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Criar um sistema que gerencia itens no jogo com recompensas itens para players.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Criar somente a parte que define como apostas são controla com armas aleatórias.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Criar somente a parte que define como itens são organiza com aposta de armas.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Criar somente a parte que define como apostas são organiza com venda de itens.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Quero apenas a função que organiza um caixas com aposta de armas para um personagens.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Fazer apenas a função que gerencia um lucky blocks no mapa para personagens.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Quero um código que gerencia apostas no jogo com objetivo armas aleatórias.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Fazer apenas a função que gerencia um caixas no mundo para jogadores.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Criar um código que organiza caixas com armas aleatórias no jogo para jogadores.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Fazer um código para controla apostas com recompensas moedas no jogo.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Quero um programa que administra itens com armas aleatórias para personagens em mundo.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Fazer apenas a função que controla um itens no mundo para jogadores.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Quero um script que organiza caixas com venda de itens para personagens em mundo.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Quero apenas a função que controla um caixas com venda de itens para um jogadores.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Fazer um código para Roblox que administra lucky blocks com aposta de armas em mundo.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Gerar um código em Lua que organiza itens com aposta de armas no jogo.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Criar um programa que administra lucky blocks com venda de itens no mundo para jogadores.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Gerar um script em Lua que organiza apostas com venda de itens no mapa.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Gerar um programa que gerencia apostas com armas aleatórias no mundo para jogadores.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Gerar um sistema que administra caixas com armas aleatórias no mapa para personagens.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Quero um código simples que organiza caixas sem loop de atualização.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Fazer um sistema de caixas que organiza com aposta de armas.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Gerar um sistema que controla lucky blocks com aposta de armas no mapa para personagens.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Quero um código que organiza apostas no mapa com objetivo aposta de armas.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Fazer um script para Roblox que gerencia caixas com coleta de moedas em mapa.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Fazer um código para administra caixas com recompensas armas no jogo.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Criar um script que administra itens com coleta de moedas no mapa para jogadores.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Criar um sistema que administra lucky blocks no mapa com recompensas armas para personagens.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Quero um código simples que gerencia itens sem loop de atualização.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Fazer apenas a função que organiza um itens no mundo para players.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Fazer um sistema para Roblox que administra lucky blocks com armas aleatórias em mundo.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Quero um código que administra apostas no mundo com objetivo aposta de armas.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Fazer um sistema para gerencia lucky blocks com recompensas itens no mundo.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Criar somente a parte que define como lucky blocks são controla com aposta de armas.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Gerar um script em Lua que administra caixas com venda de itens no jogo.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Quero um programa que gerencia apostas com aposta de armas para jogadores em mapa.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Fazer um sistema de caixas que gerencia com coleta de moedas.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Quero um código simples que gerencia apostas sem loop de atualização.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Criar um script que controla lucky blocks com aposta de armas no jogo para players.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Fazer um código para Roblox que organiza lucky blocks com armas aleatórias em mapa.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Gerar um sistema que gerencia itens com aposta de armas no jogo para jogadores.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Gerar só as configurações para organiza caixas com venda de itens.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Fazer apenas a função que gerencia um apostas no jogo para jogadores.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Quero apenas a função que administra um itens com coleta de moedas para um jogadores.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Quero apenas a função que gerencia um caixas com venda de itens para um personagens.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Quero um código que gerencia itens no mundo com objetivo aposta de armas.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Gerar um script em Lua que organiza itens com coleta de moedas no mapa.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Quero um código que gerencia lucky blocks no mundo com objetivo aposta de armas.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Criar um código que administra itens com aposta de armas no jogo para jogadores.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Fazer um sistema de apostas que controla com aposta de armas.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Fazer apenas a função que administra um itens no mundo para players.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Criar um programa que organiza itens com coleta de moedas no mapa para personagens.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Gerar um programa que organiza caixas com aposta de armas no mundo para jogadores.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Quero um código simples que administra itens sem loop de atualização.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Gerar um programa que organiza itens com coleta de moedas no jogo para personagens.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Fazer um sistema de itens que administra com venda de itens.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Criar somente a parte que define como apostas são controla com coleta de moedas.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Gerar um programa em Lua que gerencia lucky blocks com venda de itens no jogo.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Fazer um sistema de lucky blocks que controla com venda de itens.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Criar um sistema que gerencia lucky blocks no mundo com recompensas equipamentos para jogadores.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Fazer apenas a função que gerencia um apostas no mapa para personagens.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Fazer um código para administra itens com recompensas equipamentos no mapa.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Fazer apenas a função que organiza um apostas no mundo para personagens.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Criar um sistema que administra apostas no mapa com recompensas itens para players.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Quero um código simples que gerencia lucky blocks sem loop de atualização.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Quero um sistema que controla itens com coleta de moedas para personagens em mapa.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Gerar só as configurações para gerencia apostas com aposta de armas.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Fazer um código para Roblox que organiza lucky blocks com venda de itens em mapa.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Quero um código simples que organiza lucky blocks sem loop de atualização.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Criar um sistema que administra lucky blocks com coleta de moedas no mapa para personagens.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Criar um sistema que gerencia caixas no jogo com recompensas equipamentos para personagens.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Criar um sistema que organiza caixas com armas aleatórias no jogo para personagens.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Fazer um script para controla lucky blocks com recompensas moedas no mapa.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Fazer um sistema de apostas que controla com aposta de armas.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Fazer um sistema para Roblox que controla lucky blocks com aposta de armas em mundo.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Gerar um programa em Lua que organiza caixas com coleta de moedas no jogo.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Quero apenas a função que controla um lucky blocks com armas aleatórias para um personagens.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Criar um sistema que organiza lucky blocks com venda de itens no mapa para jogadores.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Criar um sistema que administra caixas no jogo com recompensas equipamentos para personagens.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Quero apenas a função que administra um apostas com venda de itens para um jogadores.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Fazer um sistema de lucky blocks que organiza com coleta de moedas.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Criar um código que organiza lucky blocks no mundo com coleta de moedas e recompensas armas.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Gerar só as configurações para gerencia caixas com armas aleatórias.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Quero um código simples que controla itens sem loop de atualização.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Criar um sistema que administra lucky blocks com venda de itens no mundo para jogadores.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Gerar um código que controla caixas com aposta de armas no jogo para personagens.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Quero um sistema que controla apostas com venda de itens para jogadores em mundo.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Gerar um código em Lua que organiza lucky blocks com aposta de armas no mapa.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Criar somente a parte que define como lucky blocks são administra com venda de itens.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Gerar um sistema que controla apostas com armas aleatórias no mapa para jogadores.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Gerar um script em Lua que organiza apostas com aposta de armas no mapa.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Quero um código que gerencia itens no mapa com objetivo aposta de armas.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Criar um programa que controla caixas com armas aleatórias no mundo para personagens.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Fazer um script para administra caixas com recompensas itens no jogo.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Quero apenas a função que organiza um caixas com coleta de moedas para um players.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Gerar um sistema em Lua que administra caixas com venda de itens no jogo.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Fazer um script para administra lucky blocks com recompensas armas no jogo.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Quero apenas a função que organiza um caixas com venda de itens para um personagens.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Gerar só as configurações para controla apostas com aposta de armas.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Quero um código simples que gerencia caixas sem loop de atualização.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Fazer um script para Roblox que administra itens com armas aleatórias em mapa.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Fazer um programa para administra caixas com recompensas armas no mapa.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Fazer apenas a função que gerencia um lucky blocks no mundo para personagens.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Criar um código que controla caixas com armas aleatórias no mundo para jogadores.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Gerar um programa em Lua que controla lucky blocks com armas aleatórias no jogo.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Criar um sistema que gerencia apostas no mundo com recompensas itens para players.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Criar somente a parte que define como apostas são administra com aposta de armas.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Gerar só as configurações para organiza apostas com aposta de armas.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Quero um código simples que administra lucky blocks sem loop de atualização.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Criar um script que organiza caixas no mapa com aposta de armas e recompensas equipamentos.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Fazer um programa para controla lucky blocks com recompensas equipamentos no mundo.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Fazer um sistema de itens que controla com coleta de moedas.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Quero um código que administra lucky blocks no mapa com objetivo aposta de armas.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Fazer um sistema para administra itens com recompensas itens no mundo.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Quero apenas a função que gerencia um caixas com coleta de moedas para um jogadores.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Gerar um código em Lua que organiza apostas com armas aleatórias no mapa.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Criar um programa que organiza lucky blocks no jogo com aposta de armas e recompensas armas.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Gerar só as configurações para organiza caixas com aposta de armas.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Gerar um sistema que administra lucky blocks com armas aleatórias no mundo para players.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Fazer apenas a função que gerencia um lucky blocks no jogo para players.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Fazer apenas a função que controla um caixas no mapa para jogadores.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Criar somente a parte que define como caixas são gerencia com aposta de armas.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Gerar só as configurações para controla itens com venda de itens.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Fazer um sistema para gerencia caixas com recompensas armas no mapa.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Criar somente a parte que define como itens são controla com armas aleatórias.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Criar um código que organiza caixas no mapa com coleta de moedas e recompensas itens.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Quero um código simples que administra apostas sem loop de atualização.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Quero um código que gerencia lucky blocks no mundo com objetivo armas aleatórias.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Fazer um sistema de lucky blocks que gerencia com venda de itens.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Criar somente a parte que define como caixas são organiza com venda de itens.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Gerar um sistema que controla apostas com aposta de armas no mundo para jogadores.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Criar um programa que controla caixas no mapa com coleta de moedas e recompensas armas.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Criar somente a parte que define como itens são gerencia com coleta de moedas.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Gerar um script em Lua que controla apostas com venda de itens no jogo.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Quero um código simples que controla caixas sem loop de atualização.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Criar um código que controla caixas com armas aleatórias no mundo para personagens.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Fazer um programa para Roblox que gerencia apostas com aposta de armas em mapa.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Criar um sistema que gerencia apostas no jogo com recompensas moedas para players.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Gerar um programa que controla itens com coleta de moedas no mapa para players.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Fazer um script para organiza apostas com recompensas equipamentos no mundo.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Quero apenas a função que organiza um itens com coleta de moedas para um players.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Gerar só as configurações para controla lucky blocks com venda de itens.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Criar somente a parte que define como caixas são gerencia com armas aleatórias.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Criar um sistema que gerencia itens com armas aleatórias no mapa para personagens.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Gerar um script em Lua que administra apostas com armas aleatórias no jogo.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Fazer apenas a função que gerencia um lucky blocks no mundo para personagens.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  },
  {
    "timestamp": "2025-06-17T13:20:34.750475",
    "source": "Gerado localmente",
    "prompt": "Gerar um script que organiza lucky blocks com coleta de moedas no jogo para jogadores.",
    "parameters": {
      "script": {
        "properties": {
          "BoxTypes": {
            "type": "table",
            "value": {
              "Common": {
                "cost": 0,
                "weapons": {
                  "Knife": 10,
                  "Pistol": 20,
                  "Rifle": 50
                }
              },
              "Rare": {
                "cost": 100,
                "weapons": {
                  "Shotgun": 50,
                  "Sniper": 100,
                  "Flamethrower": 200
                }
              },
              "Epic": {
                "cost": 500,
                "weapons": {
                  "RocketLauncher": 300,
                  "LaserGun": 500,
                  "LegendarySword": 1000
                }
              }
            }
          },
          "BetCooldown": {
            "type": "number",
            "value": 30
          },
          "DefaultBoxType": {
            "type": "string",
            "value": "Common"
          }
        }
      }
    },
    "generated_lua": "--[[\n    Script: LuckyBlockSystem\n    Local: ServerScriptService\n    Autor: Gerado por Script Python\n    Descrição: Sistema de Lucky Block com caixas grátis e apostas de armas.\n]]\n\n-- Serviços necessários\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\n\n-- Configurações do sistema de Lucky Block\nlocal BOX_TYPES = {[\"Common\"] = {, [\"cost\"] = 0,, [\"weapons\"] = {'Knife': 10, 'Pistol': 20, 'Rifle': 50},, },[\"Rare\"] = {, [\"cost\"] = 100,, [\"weapons\"] = {'Shotgun': 50, 'Sniper': 100, 'Flamethrower': 200},, },[\"Epic\"] = {, [\"cost\"] = 500,, [\"weapons\"] = {'RocketLauncher': 300, 'LaserGun': 500, 'LegendarySword': 1000},, },}\nlocal BET_COOLDOWN = 30 -- segundos\nlocal DEFAULT_BOX_TYPE = \"Common\"\n\n-- Tabela de apostas ativas\nlocal activeBets = {}\n\n-- Função que abre uma caixa e dá uma arma aleatória\nlocal function openBox(player, boxType)\n    local boxData = BOX_TYPES[boxType] or BOX_TYPES[DEFAULT_BOX_TYPE]\n    if boxData.cost > 0 then\n        local coins = player.leaderstats.Coins\n        if coins.Value < boxData.cost then\n            return false, 'Moedas insuficientes'\n        end\n        coins.Value = coins.Value - boxData.cost\n    end\n    local weapons = boxData.weapons\n    local totalWeight = 0\n    for _, weight in pairs(weapons) do\n        totalWeight = totalWeight + weight\n    end\n    local rand = math.random(1, totalWeight)\n    local currentWeight = 0\n    local selectedWeapon = nil\n    for weapon, weight in pairs(weapons) do\n        currentWeight = currentWeight + weight\n        if rand <= currentWeight then\n            selectedWeapon = weapon\n            break\n        end\n    end\n    local inventory = player:FindFirstChild('Inventory')\n    local weaponValue = Instance.new('StringValue')\n    weaponValue.Name = selectedWeapon\n    weaponValue.Value = tostring(weapons[selectedWeapon])\n    weaponValue.Parent = inventory\n    return true, selectedWeapon\nend\n\n-- Função que vende uma arma do inventário\nlocal function sellWeapon(player, weaponName)\n    local inventory = player:FindFirstChild('Inventory')\n    local weapon = inventory:FindFirstChild(weaponName)\n    if weapon then\n        local coins = player.leaderstats.Coins\n        coins.Value = coins.Value + tonumber(weapon.Value)\n        weapon:Destroy()\n        return true, 'Arma vendida'\n    end\n    return false, 'Arma não encontrada'\nend\n\n-- Função que gerencia apostas entre dois jogadores\nlocal function startBet(player1, player2, boxType)\n    if activeBets[player1.UserId] or activeBets[player2.UserId] then\n        return false, 'Um dos jogadores está em outra aposta'\n    end\n    local success1, result1 = openBox(player1, boxType)\n    if not success1 then\n        return false, result1\n    end\n    local success2, result2 = openBox(player2, boxType)\n    if not success2 then\n        return false, result2\n    end\n    activeBets[player1.UserId] = true\n    activeBets[player2.UserId] = true\n    local weapon1Value = tonumber(player1.Inventory:FindFirstChild(result1).Value)\n    local weapon2Value = tonumber(player2.Inventory:FindFirstChild(result2).Value)\n    local winner, loser, winnerWeapon, loserWeapon\n    if weapon1Value > weapon2Value then\n        winner, loser = player1, player2\n        winnerWeapon, loserWeapon = result1, result2\n    else\n        winner, loser = player2, player1\n        winnerWeapon, loserWeapon = result2, result1\n    end\n    local winnerInventory = winner:FindFirstChild('Inventory')\n    local loserWeapon = loser.Inventory:FindFirstChild(loserWeapon)\n    if loserWeapon then\n        local newWeapon = Instance.new('StringValue')\n        newWeapon.Name = loserWeapon.Name\n        newWeapon.Value = loserWeapon.Value\n        newWeapon.Parent = winnerInventory\n        loserWeapon:Destroy()\n    end\n    activeBets[player1.UserId] = nil\n    activeBets[player2.UserId] = nil\n    return true, winner, winnerWeapon, loserWeapon\nend\n\n-- Inicializa jogador\nPlayers.PlayerAdded:Connect(function(player)\n    local leaderstats = Instance.new('Folder')\n    leaderstats.Name = 'leaderstats'\n    leaderstats.Parent = player\n    local coins = Instance.new('IntValue')\n    coins.Name = 'Coins'\n    coins.Value = 0\n    coins.Parent = leaderstats\n    local inventory = Instance.new('Folder')\n    inventory.Name = 'Inventory'\n    inventory.Parent = player\nend)\n\n-- Configura eventos remotos\nlocal openBoxEvent = Instance.new('RemoteFunction')\nopenBoxEvent.Name = 'OpenBox'\nopenBoxEvent.Parent = ReplicatedStorage\nopenBoxEvent.OnServerInvoke = function(player, boxType)\n    return openBox(player, boxType)\nend\n\nlocal sellWeaponEvent = Instance.new('RemoteFunction')\nsellWeaponEvent.Name = 'SellWeapon'\nsellWeaponEvent.Parent = ReplicatedStorage\nsellWeaponEvent.OnServerInvoke = function(player, weaponName)\n    return sellWeapon(player, weaponName)\nend\n\nlocal startBetEvent = Instance.new('RemoteFunction')\nstartBetEvent.Name = 'StartBet'\nstartBetEvent.Parent = ReplicatedStorage\nstartBetEvent.OnServerInvoke = function(player1, player2Id)\n    local player2 = Players:GetPlayerByUserId(player2Id)\n    if not player2 then\n        return false, 'Jogador não encontrado'\n    end\n    return startBet(player1, player2, DEFAULT_BOX_TYPE)\nend)",
    "metadata": {
      "script_name": "LuckyBlockSystem",
      "location": "ServerScriptService",
      "description": "Sistema de Lucky Block com caixas grátis que dão armas aleatórias e apostas entre jogadores."
    }
  }
]